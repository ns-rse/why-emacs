---
title: Why Emacs?
subtitle: (Why _Not_ Emacs?)
format:
  clean-revealjs: default
author:
  - name: Neil Shephard
    orcid: 0000-0001-8301-6857
    email: n.shephard@sheffield.ac.uk
    affiliations: RSE, University of Sheffield
from: markdown+emoji
date: last-modified
---

## Emacs

### _'Course, there's an Emacs command to do that_

![[XKCD : Real Programmers](https://xkcd.com/378/)](https://imgs.xkcd.com/comics/real_programmers.png)

<!-- ### Some extra things you can do with the clean theme -->

<!-- Special classes for emphasis -->

<!-- - `.alert` class for default emphasis, e.g. [important note]{.alert}. -->
<!-- - `.fg` class for custom colour, e.g. [important note]{.fg style="--col: #e64173"}. -->
<!-- - `.bg` class for custom background, e.g. [important note]{.bg style="--col: #e64173"}. -->

<!-- Cross-references -->

<!-- - `.button` class provides a Beamer-like button, e.g. [[Summary]{.button}](#sec-summary) -->

::: {.notes}
:::

## Content

:::: {.columns}

::: {.column width="50%"}

### Covered

* Orgmode
* Magit
* Emacs as IDE
* TRAMP
* Passwords and Encryption

:::

::: {.column width="50%"}

### Not Covered

* [Emacs Lisp](https://www.gnu.org/software/emacs/manual/html_node/elisp/index.html )
* Configuration

:::

::::

## Orgmode

* [Orgmode](https://orgmode.org) plain text file format
::: {.notes}
:::

## Magit

::: {.notes}
:::

## IDE (Language Server Protocol)

* Foolish not to use IDE
* Many language specific legacy packages.
* Modern solution [Language Server Protocol](https://microsoft.github.io/language-server-protocol/)
* [LSP Mode](https://emacs-lsp.github.io/lsp-mode/) for Emacs supports [lots of languages](https://emacs-lsp.github.io/lsp-mode/page/languages/)

::: {.notes}
:::


## Passwords

* [pass](https://www.passwordstore.org) the standard password manager.
* Keys are GPG encrypted in `~/.password-store`
* Use [pass](https://github.com/NicolasPetton/pass) package to access keys from Emacs.
* Bound to `F1`

::: {.notes}
I use `pass` the standard password manager which uses GPG to encrypt passwords and other information simple text
files. There is an Emacs package for interfacing to the command line utility and I've bound it to the key `F1`. I have
my GPG key linked to my Yubikey so I typically have to have the Yubikey plugged in for this to work, but I've configured
and bound the Emacs package to `F1` so all I need to do access my passwords is press that (`F1`), if they key isn't
inserted I'm prompted to do so and then I have to unlock my GPG key. Once that is done Emacs copies the password to the
clipboard and I can paste it into a website within 45 seconds before it is scrubbed from the clipboard.
:::

## Encryption

* Easy to encrypt/decrypt files from Emacs.
* Just save a file with `.gpg` extension.
* Prompted for key to encrypt with.
* Opening simple, just open the file, you are prompted for decryption key.

::: {.notes}
As you've just seen Emacs can work with GPG encrypted files and its really easy to do so, just save a file with the
`.gpg` extension and you are prompted for which key to encrypt the file with. When you want to open it you just open it
like any other file and if your key isn't currently unlocked you're prompted to do so.
:::

## TRAMP

* **T**ransparent **R**emote **A**cess, **M**ultiple **P**rotocols
* Open files over SSH as if local files.

```{bash}
# Open file as root
/su::/etc/group
# Open remote file encrypted with GPG
/ssh:neil@alarmpi-4b:~/org/holidays/2023/slovenia_2023.org.gpg
```
::: {.notes}

TRAMP which stands for Transparent Remote Access Multiple Protocols provides a fairly seamless way to open and edit
files on remote systems, or as `root` user which saves you having to `su` into `root` or switch to a terminal and use
`sudo`. Typically files are opened over `ssh` but as the name suggests other protocols are supported.

It works by using flags/switches to indicate the protocol to be used for opening the file and so if I wanted to open the
`/etc/group` file and modify who is in what groups I use `/su::/etc/group`. If I want to open a GPG encrypted file on a
remote system, in this case one of my Raspebrry Pi's then I instead use `/ssh` as the first switch, give the username
and hostname and then the path to the file I want to open. It will be
:::


## Links

:::: {.columns}

::: {.column width="50%"}

### Official Pages

* [Emacs](https://www.gnu.org/software/emacs/)
* [Emacsdocs.org](https://emacsdocs.org/)
* [LSP Mode](https://emacs-lsp.github.io/lsp-mode/)
* [Magit](https://magit.vc)
* [Orgmode](https://orgmode.org) ([World of Org](https://orgmode.org/worg/))
* [OrgRoam](https://www.orgroam.com/)

:::

::: {.column width="50%"}

### Useful Resources

* [Emacs StackExchange](https://emacs.stackexchange.com/)
* [/r/emacs](https://www.reddit.com/r/emacs)
* [emacs.ch](https://emacs.ch/explore) (Mastodon instance)
* [SystemCrafters](https://systemcrafters.net/guides/)
* [My Emacs Config](https://gitlab.com/nshephard/emacs)

:::

::::

::: {.notes}
:::
